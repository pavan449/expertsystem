package com.rit.ai.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

import org.jdesktop.layout.*;



public class Login extends javax.swing.JFrame {
    
    /** Creates new form Antenna */
    public Login() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel3 = new JPanel();
        userName = new JLabel();
        unameTextfield = new JTextField();
        password = new JLabel();
        passTextField = new JPasswordField();
        loginButton = new JButton();
        CancelButton = new JButton();
        nameLabel = new JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userName.setText("Username:");

        password.setText("Passoword:");

        loginButton.addActionListener(new ActionListener() {

        	public void actionPerformed(ActionEvent evt) {
            	loginButtonActionPerformed(evt);
            }
        });

        loginButton.setText("Login ");

        CancelButton.setText("Cancel");
        
        CancelButton.addActionListener(new ActionListener() {

        	public void actionPerformed(ActionEvent evt) {
        		cancelButtonActionPerformed(evt);
            }
        });

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(37, 37, 37)
                        .add(jPanel3Layout.createParallelGroup(GroupLayout.LEADING)
                            .add(userName)
                            .add(password))
                        .add(29, 29, 29)
                        .add(jPanel3Layout.createParallelGroup(GroupLayout.LEADING, false)
                            .add(unameTextfield)
                            .add(passTextField, GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(105, 105, 105)
                        .add(loginButton)
                        .add(51, 51, 51)
                        .add(CancelButton)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(jPanel3Layout.createParallelGroup(GroupLayout.BASELINE)
                    .add(userName)
                    .add(unameTextfield, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(GroupLayout.LEADING)
                    .add(password)
                    .add(passTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 34, Short.MAX_VALUE)
                .add(jPanel3Layout.createParallelGroup(GroupLayout.BASELINE)
                    .add(loginButton)
                    .add(CancelButton))
                .add(25, 25, 25))
        );

        nameLabel.setText("   WATER SENSOR QUALITY DETECTOR");
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(80, 80, 80)
                        .add(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(178, 178, 178)
                        .add(nameLabel, GroupLayout.PREFERRED_SIZE, 277, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(36, 36, 36)
                .add(nameLabel, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        pack();
        this.setLocation(200, 100);
        this.setSize(600,500);
        this.setVisible(true);
    }// </editor-fold>

    private void loginButtonActionPerformed(ActionEvent e) {
		System.out.println("loginButtonActionPerformed(ActionEvent e) called.");
		String password = new String(passTextField.getPassword());
		String userName = new String(unameTextfield.getText());

		if(userName.equals("") || password.equals("")) // If password and username is empty > Do this >>>
		{
			loginButton.setEnabled(false);
			JLabel errorFields = new JLabel("<HTML><FONT COLOR = Blue>You must enter a username and password to login.</FONT></HTML>");	
			JOptionPane.showMessageDialog(null,errorFields); 
			passTextField.setText("");
			unameTextfield.setText("");
			loginButton.setEnabled(true);
			this.setVisible(true);
		}
		else
			
//			LoginDAO loginDAO = new LoginDAO();
//			Object user = loginDAO.login(userName, password);
//			if (user instanceof AdminUser){
//				System.out.println(((AdminUser) user).getLevel());
//				AdminPage adminPage = new AdminPage(userName);
//				adminPage.populateAdminTables();
//				this.dispose();
//			}else if (user instanceof RegisteredUser){
//				System.out.println(((RegisteredUser) user).getTypeOfUser());
//				UserPage userPage = new UserPage(userName);
//				userPage.populateUserTables();
//				userPage.populateDomains(userName);
//				this.dispose();
//			}else{
//				loginError();
//			}
				
				
			if(userName.equals("admin") || password.equals("admin")) {
//				if (admin.isAuthorizedAdmin(userName, password)) {
					UserPage adminPage = new UserPage(userName);
//					adminPage.populateAdminTables();
					this.dispose();
			}else {
				loginError();
			}
//			}
//				else if(userName.equals("user") || password.equals("user")) {
//				UserUtil admin = new UserUtil();
//				if (admin.isAuthorizedUser(userName, password)) {
//					UserPage adminPage = new UserPage(userName);
//					this.dispose();
//				}else {
//					loginError();
//				}
//			}
	}	
    
    private void loginError() {
		JLabel errorFields = new JLabel("<HTML><FONT COLOR = Blue>Incorrect Username or passowrd.</FONT></HTML>");	
		JOptionPane.showMessageDialog(null,errorFields, "Error", JOptionPane.ERROR_MESSAGE);
    }

    private void cancelButtonActionPerformed(ActionEvent evt) {
    	this.dispose();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               Login login = new Login();
               login.setLocation(250, 100);
               login.setSize(600,500);
               login.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify
    private JButton CancelButton;
    private JButton loginButton;
    private JLabel nameLabel;
    private JPanel jPanel3;
    private JLabel userName;
    private JLabel password;
    private JTextField unameTextfield;
    private JPasswordField passTextField;
    // End of variables declaration
    
}
