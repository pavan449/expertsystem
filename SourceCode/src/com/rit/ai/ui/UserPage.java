package com.rit.ai.ui;


import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map.Entry;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;

import com.rit.ai.bo.Node;
import com.rit.ai.demo.Demo;
import com.rit.ai.utility.Parser;
import java.util.Map;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author prerna
 */
public class UserPage extends javax.swing.JFrame {

	static String  currentUser;
	
    /**
     * Creates new form UserPage
     */
	
	public UserPage() {
		
	}
	
    public UserPage(String currentUser) {
    	this.currentUser = currentUser;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        mainTabbedPane = new javax.swing.JTabbedPane();
        clientBsedSelDomainCombo = new javax.swing.JComboBox();
        final JLabel clientBasedSeleDomainL = new javax.swing.JLabel();
       JButton clientbasedShowVisitsButton = new javax.swing.JButton();
     JPanel   clientBasedClientTablePanel = new javax.swing.JPanel();
     JScrollPane   clientBasedClientTable = new javax.swing.JScrollPane();
     clientbasedShowVisitsButton.setVisible(false);
     final JTable   clientTable = new javax.swing.JTable();
 
        JPanel clientBasedPanel = new javax.swing.JPanel();
        uploadDataPanel = new javax.swing.JPanel();
        domainCardPanel = new javax.swing.JPanel();
        domainTable = new javax.swing.JTable();
        addDomainNameTF = new javax.swing.JTextField();
        addDomainIPTF = new javax.swing.JTextField();
        addDomainTLDTF = new javax.swing.JTextField();
        addDomainCatogTF = new javax.swing.JTextField();
        addDomainAnnFeeTf = new javax.swing.JTextField();
        addDomainSdateTf = new javax.swing.JTextField();
        addDomainEDateTF = new javax.swing.JTextField();
        editDomainNameTF = new javax.swing.JTextField();
        editDomainSelCombo = new javax.swing.JComboBox();
        editDomainIPTF = new javax.swing.JTextField();
        editDomainTLDTF = new javax.swing.JTextField();
        editDomainCategoryTF = new javax.swing.JTextField();
        editDomainAnnualFeeTF = new javax.swing.JTextField();
        editDomainRDateTF = new javax.swing.JTextField();
        editDomainExDateTF = new javax.swing.JTextField();
        deleteDomainSelCombo = new javax.swing.JComboBox();
        resultsPanel = new javax.swing.JPanel();
        resultstabbedPane = new javax.swing.JTabbedPane();
        pHSensorPanel = new javax.swing.JPanel();
        conductivitySensorPanel = new javax.swing.JPanel();
        dissolvedOxySensorPanel = new javax.swing.JPanel();
        temperatureSensorPanel = new javax.swing.JPanel();
        clientBsedSelDomainCombo = new javax.swing.JComboBox();
        salinitySensorPanel = new javax.swing.JPanel();
        locBasedSelecDomainL = new javax.swing.JLabel();
        locBasedSelectDomainCombo = new javax.swing.JComboBox();
        locaBsedSelLocationL = new javax.swing.JLabel();
        locBasedShowVisitsButton = new javax.swing.JButton();
        locaBasedSelLocationCombo = new javax.swing.JComboBox();
        salinityBasedPieChartPanel = new javax.swing.JPanel();
        pHBasedPieChartPanel = new javax.swing.JPanel();
        conductivityBasedPieChartPanel = new javax.swing.JPanel();
        temperatureBasedPieChartPanel = new javax.swing.JPanel();
        dissolvedOxyBasedPieChartPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Logout = new javax.swing.JButton();
    	uploadDataTF = new javax.swing.JTextField();
		browseFileButton = new javax.swing.JButton();
		uploadFileButton = new javax.swing.JButton();
	
		locaBasedSelLocationCombo.setVisible(false);
		locaBsedSelLocationL.setVisible(false);
		locBasedSelecDomainL.setVisible(false);
		locBasedSelectDomainCombo.setVisible(false);
		locBasedShowVisitsButton.setVisible(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

  
    	browseFileButton.setText("Browse");
		
		 browseFileButton // ////////////////////////////////////////////////
			.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					cbrowseFileButtonActionPerformed(evt);
				}

				private void cbrowseFileButtonActionPerformed(
						ActionEvent evt) {
					JFileChooser c = new JFileChooser();
				      // Demonstrate "Open" dialog:
				      int rVal = c.showOpenDialog(UserPage.this);
				      if (rVal == JFileChooser.APPROVE_OPTION) {
				        uploadDataTF.setText(c.getCurrentDirectory()+"/"+c.getSelectedFile().getName());
				        

						
						//System.out.println("fffffff  "+demo.phError);
					
				      }
				      if (rVal == JFileChooser.CANCEL_OPTION) {
				      //  filename.setText("You pressed cancel");
				       // dir.setText("");
				      }
					
				}
			});


		uploadFileButton.setText("Upload");
		
       uploadFileButton // ////////////////////////////////////////////////
		.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {

				Demo demo = new Demo();
				Parser parser = new Parser();
				ArrayList<Node> nodeList = parser.parseFile(uploadDataTF.getText());
				
				demo.checkRules(nodeList);
				
				
				demo.populateJessValues(nodeList);
				
				uploadFileButtonActionPerformed(evt);
				salinityBasedShowVisitsButtonActionPerformed(evt);
				pHBasedBasedShowVisitsButtonActionPerformed(evt);
				conductivityBasedShowVisitsButtonActionPerformed(evt);
				temperatureBasedShowVisitsButtonActionPerformed(evt);
				clientBasedShowVisitsButtonActionPerformed(evt);
				dissolvedOxyBasedShowVisitsButtonActionPerformed(evt);
			}
			
			private void salinityBasedShowVisitsButtonActionPerformed(
					ActionEvent evt) {// ////////////////////////////////
				VisitLogsUtil vlu = new VisitLogsUtil();
				System.out.println("show button");
				salinityBasedPieChartPanel.removeAll();
				
				salinityBasedPieChartPanel
						.setLayout(new java.awt.BorderLayout());
				salinityBasedPieChartPanel.setBorder(BorderFactory
						.createTitledBorder(""));
				salinityBasedPieChartPanel.add(vlu
						.generateLocationGraphForSalinity(),
						BorderLayout.CENTER);
				salinityBasedPieChartPanel.validate();
				pack();
			}
			
			private void dissolvedOxyBasedShowVisitsButtonActionPerformed(
					ActionEvent evt) {// ////////////////////////////////
				VisitLogsUtil vlu = new VisitLogsUtil();
				System.out.println("show button");
				dissolvedOxyBasedPieChartPanel.removeAll();
				
				dissolvedOxyBasedPieChartPanel
						.setLayout(new java.awt.BorderLayout());
				dissolvedOxyBasedPieChartPanel.setBorder(BorderFactory
						.createTitledBorder(""));
				dissolvedOxyBasedPieChartPanel.add(vlu
						.generateLocationGraphForDissolvedOxy(),
						BorderLayout.CENTER);
				dissolvedOxyBasedPieChartPanel.validate();
				pack();
			}
			
			private void temperatureBasedShowVisitsButtonActionPerformed(
					ActionEvent evt) {// ////////////////////////////////
				VisitLogsUtil vlu = new VisitLogsUtil();
				System.out.println("show button");
				temperatureBasedPieChartPanel.removeAll();
				
				temperatureBasedPieChartPanel
						.setLayout(new java.awt.BorderLayout());
				temperatureBasedPieChartPanel.setBorder(BorderFactory
						.createTitledBorder(""));
				temperatureBasedPieChartPanel.add(vlu
						.generateLocationGraphForTemp(),
						BorderLayout.CENTER);
				temperatureBasedPieChartPanel.validate();
				pack();
			}
			
			
			private void pHBasedBasedShowVisitsButtonActionPerformed(
					ActionEvent evt) {// ////////////////////////////////
				VisitLogsUtil vlu = new VisitLogsUtil();
				System.out.println("show button");
				pHBasedPieChartPanel.removeAll();
				
				pHBasedPieChartPanel
						.setLayout(new java.awt.BorderLayout());
				pHBasedPieChartPanel.setBorder(BorderFactory
						.createTitledBorder(""));
				pHBasedPieChartPanel.add(vlu
						.generateLocationGraphForPH(),
						BorderLayout.CENTER);
				pHBasedPieChartPanel.validate();
				pack();
			}
			
			private void conductivityBasedShowVisitsButtonActionPerformed(
					ActionEvent evt) {// ////////////////////////////////
				VisitLogsUtil vlu = new VisitLogsUtil();
				System.out.println("show button");
				conductivityBasedPieChartPanel.removeAll();
				
				conductivityBasedPieChartPanel
						.setLayout(new java.awt.BorderLayout());
				conductivityBasedPieChartPanel.setBorder(BorderFactory
						.createTitledBorder(""));
				conductivityBasedPieChartPanel.add(vlu
						.generateLocationGraphForConductivity(),
						BorderLayout.CENTER);
				conductivityBasedPieChartPanel.validate();
				pack();
			}
			private void clientBasedShowVisitsButtonActionPerformed(
					ActionEvent evt) {// ////////////////////////////////
				//iq static var is to test button listener
				VisitLogsUtil aUtil=new VisitLogsUtil();
//				Object clientTableData[][]=aUtil.getClientTableData(clientBsedSelDomainCombo.getSelectedItem().toString());
				
				com.rit.ai.jess.Jess jess = com.rit.ai.jess.Jess.getJessInstance();
				HashMap<String, Float> sensorHm = jess.getSensorHm();
				float totalConfidence = jess.getTotalConfidence();
				
				Object clientTableData[][]= new Object[16][16];
				int i=0,j=0;
				for (Entry<String, Float> entry : sensorHm.entrySet()) {
					clientTableData[i][j] = entry.getKey();
					clientTableData[i][j+1] = entry.getValue();
					totalConfidence +=entry.getValue();
					i++;
				   // Object value = entry.getValue();
				    
				}
				
				totalConfidence /=15;
				Float overAllConfidence = totalConfidence;
				//jTable1.setModel(null);
				clientBasedSeleDomainL.setText("Overall confidence  "+overAllConfidence);
		        clientBasedSeleDomainL.setVisible(true);
				clientTable.setModel(new javax.swing.table.DefaultTableModel(
						clientTableData, new String[] { "IP",
								"Location"}) {
					Class[] types = new Class[] { java.lang.String.class,
							java.lang.String.class, java.lang.String.class,
							java.lang.String.class };
					boolean[] canEdit = new boolean[] { false, false};

					public Class getColumnClass(int columnIndex) {
						return types[columnIndex];
					}

					public boolean isCellEditable(int rowIndex, int columnIndex) {
						return canEdit[columnIndex];
					}
				});
			}

			private void uploadFileButtonActionPerformed(
					ActionEvent evt) {
//				LogParser lp=new LogParser();
//				if(uploadDataTF.getText()!=null)
//				lp.parse(uploadDataTF.getText());
			}
		});

        
    	org.jdesktop.layout.GroupLayout uploadDataPanelLayout = new org.jdesktop.layout.GroupLayout(uploadDataPanel);
		uploadDataPanel.setLayout(uploadDataPanelLayout);
		uploadDataPanelLayout.setHorizontalGroup(
				uploadDataPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(uploadDataPanelLayout.createSequentialGroup()
						.addContainerGap()
						.add(uploadDataTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 197, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
						.add(browseFileButton)
						.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
						.add(uploadFileButton)
						.addContainerGap(393, Short.MAX_VALUE))
				);
		uploadDataPanelLayout.setVerticalGroup(
				uploadDataPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(uploadDataPanelLayout.createSequentialGroup()
						.add(23, 23, 23)
						.add(uploadDataPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
								.add(uploadDataTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
								.add(browseFileButton)
								.add(uploadFileButton))
								.addContainerGap(319, Short.MAX_VALUE))
				);

        mainTabbedPane.addTab("Upload Data", uploadDataPanel);

        resultstabbedPane.addTab("Salinity Sensor", salinitySensorPanel);

        locBasedSelecDomainL.setText("Select Domain");

        locBasedSelectDomainCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        locaBasedSelLocationCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.layout.GroupLayout salinityBasedPieChartPanelLayout = new org.jdesktop.layout.GroupLayout(salinityBasedPieChartPanel);
        salinityBasedPieChartPanel.setLayout(salinityBasedPieChartPanelLayout);
        salinityBasedPieChartPanelLayout.setHorizontalGroup(
        		salinityBasedPieChartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        salinityBasedPieChartPanelLayout.setVerticalGroup(
        		salinityBasedPieChartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 288, Short.MAX_VALUE)
        );
        
        org.jdesktop.layout.GroupLayout salinitybasedPanelLayout = new org.jdesktop.layout.GroupLayout(salinitySensorPanel);
        salinitySensorPanel.setLayout(salinitybasedPanelLayout);
        salinitybasedPanelLayout.setHorizontalGroup(
        		salinitybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(salinitybasedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(salinitybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(salinityBasedPieChartPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(salinitybasedPanelLayout.createSequentialGroup()
                        .add(locBasedSelecDomainL)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locBasedSelectDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locBasedShowVisitsButton)
                        .add(0, 269, Short.MAX_VALUE)))
                .addContainerGap())
        );
        salinitybasedPanelLayout.setVerticalGroup(
        		salinitybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(salinitybasedPanelLayout.createSequentialGroup()
                .add(salinitybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(locBasedSelecDomainL)
                    .add(locBasedSelectDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(locBasedShowVisitsButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(salinityBasedPieChartPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        resultstabbedPane.addTab("pH Sensor", pHSensorPanel);

        locaBasedSelLocationCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.layout.GroupLayout pHBasedPieChartPanelLayout = new org.jdesktop.layout.GroupLayout(pHBasedPieChartPanel);
        pHBasedPieChartPanel.setLayout(pHBasedPieChartPanelLayout);
        pHBasedPieChartPanelLayout.setHorizontalGroup(
            pHBasedPieChartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        pHBasedPieChartPanelLayout.setVerticalGroup(
            pHBasedPieChartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 288, Short.MAX_VALUE)
        );
        
        org.jdesktop.layout.GroupLayout pHbasedPanelLayout = new org.jdesktop.layout.GroupLayout(pHSensorPanel);
        pHSensorPanel.setLayout(pHbasedPanelLayout);
        pHbasedPanelLayout.setHorizontalGroup(
            pHbasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pHbasedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(pHbasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pHBasedPieChartPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(pHbasedPanelLayout.createSequentialGroup()
                        .add(locBasedSelecDomainL)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locBasedSelectDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locBasedShowVisitsButton)
                        .add(0, 269, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pHbasedPanelLayout.setVerticalGroup(
            pHbasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pHbasedPanelLayout.createSequentialGroup()
                .add(pHbasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(locBasedSelecDomainL)
                    .add(locBasedSelectDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(locBasedShowVisitsButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pHBasedPieChartPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        resultstabbedPane.addTab("Conductivity Sensor", conductivitySensorPanel);

        locaBasedSelLocationCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.layout.GroupLayout conductivityBasedPieChartPanelLayout = new org.jdesktop.layout.GroupLayout(conductivityBasedPieChartPanel);
        conductivityBasedPieChartPanel.setLayout(conductivityBasedPieChartPanelLayout);
        conductivityBasedPieChartPanelLayout.setHorizontalGroup(
        		conductivityBasedPieChartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        conductivityBasedPieChartPanelLayout.setVerticalGroup(
        		conductivityBasedPieChartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 288, Short.MAX_VALUE)
        );
        
        org.jdesktop.layout.GroupLayout conductivitybasedPanelLayout = new org.jdesktop.layout.GroupLayout(conductivitySensorPanel);
        conductivitySensorPanel.setLayout(conductivitybasedPanelLayout);
        conductivitybasedPanelLayout.setHorizontalGroup(
        		conductivitybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(conductivitybasedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(conductivitybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(conductivityBasedPieChartPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(conductivitybasedPanelLayout.createSequentialGroup()
                        .add(locBasedSelecDomainL)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locBasedSelectDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locBasedShowVisitsButton)
                        .add(0, 269, Short.MAX_VALUE)))
                .addContainerGap())
        );
        conductivitybasedPanelLayout.setVerticalGroup(
        		conductivitybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(conductivitybasedPanelLayout.createSequentialGroup()
                .add(conductivitybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(locBasedSelecDomainL)
                    .add(locBasedSelectDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(locBasedShowVisitsButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(conductivityBasedPieChartPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        resultstabbedPane.addTab("Temperature Sensor", temperatureSensorPanel);

        locaBasedSelLocationCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.layout.GroupLayout temperatureBasedPieChartPanelLayout = new org.jdesktop.layout.GroupLayout(temperatureBasedPieChartPanel);
        temperatureBasedPieChartPanel.setLayout(temperatureBasedPieChartPanelLayout);
        temperatureBasedPieChartPanelLayout.setHorizontalGroup(
        		temperatureBasedPieChartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        temperatureBasedPieChartPanelLayout.setVerticalGroup(
        		temperatureBasedPieChartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 288, Short.MAX_VALUE)
        );
        
        org.jdesktop.layout.GroupLayout temperaturebasedPanelLayout = new org.jdesktop.layout.GroupLayout(temperatureSensorPanel);
        temperatureSensorPanel.setLayout(temperaturebasedPanelLayout);
        temperaturebasedPanelLayout.setHorizontalGroup(
        		temperaturebasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(temperaturebasedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(temperaturebasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(temperatureBasedPieChartPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(temperaturebasedPanelLayout.createSequentialGroup()
                        .add(locBasedSelecDomainL)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locBasedSelectDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locBasedShowVisitsButton)
                        .add(0, 269, Short.MAX_VALUE)))
                .addContainerGap())
        );
        temperaturebasedPanelLayout.setVerticalGroup(
        		temperaturebasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(temperaturebasedPanelLayout.createSequentialGroup()
                .add(temperaturebasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(locBasedSelecDomainL)
                    .add(locBasedSelectDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(locBasedShowVisitsButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(temperatureBasedPieChartPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        resultstabbedPane.addTab("Dissolved Oxygen Sensor", dissolvedOxySensorPanel);

         locaBasedSelLocationCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.layout.GroupLayout dissolvedOxyBasedPieChartPanelLayout = new org.jdesktop.layout.GroupLayout(dissolvedOxyBasedPieChartPanel);
        dissolvedOxyBasedPieChartPanel.setLayout(dissolvedOxyBasedPieChartPanelLayout);
        dissolvedOxyBasedPieChartPanelLayout.setHorizontalGroup(
        		dissolvedOxyBasedPieChartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        dissolvedOxyBasedPieChartPanelLayout.setVerticalGroup(
        		dissolvedOxyBasedPieChartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 288, Short.MAX_VALUE)
        );
        
        org.jdesktop.layout.GroupLayout dissolvedOxybasedPanelLayout = new org.jdesktop.layout.GroupLayout(dissolvedOxySensorPanel);
        dissolvedOxySensorPanel.setLayout(dissolvedOxybasedPanelLayout);
        dissolvedOxybasedPanelLayout.setHorizontalGroup(
        		dissolvedOxybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(dissolvedOxybasedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(dissolvedOxybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(dissolvedOxyBasedPieChartPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(dissolvedOxybasedPanelLayout.createSequentialGroup()
                        .add(locBasedSelecDomainL)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locBasedSelectDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locBasedShowVisitsButton)
                        .add(0, 269, Short.MAX_VALUE)))
                .addContainerGap())
        );
        dissolvedOxybasedPanelLayout.setVerticalGroup(
        		dissolvedOxybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(dissolvedOxybasedPanelLayout.createSequentialGroup()
                .add(dissolvedOxybasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(locBasedSelecDomainL)
                    .add(locBasedSelectDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(locBasedShowVisitsButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dissolvedOxyBasedPieChartPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        clientBsedSelDomainCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        clientBasedSeleDomainL.setVisible(false);
        clientBsedSelDomainCombo.setVisible(false);
//        clientBasedSeleDomainL.setText("Overall confidence");
//        clientBasedSeleDomainL.setVisible(true);
//        clientbasedShowVisitsButton.setText("Show Visits");
        
		// clientbasedShowVisitsButton.addActionListener(arg0)
//		clientbasedShowVisitsButton // ////////////////////////////////////////////////
//				.addActionListener(new java.awt.event.ActionListener() {
//					public void actionPerformed(java.awt.event.ActionEvent evt) {
//						clientBasedShowVisitsButtonActionPerformed(evt);
//					}
//
//					private void clientBasedShowVisitsButtonActionPerformed(
//							ActionEvent evt) {// ////////////////////////////////
//						//iq static var is to test button listener
//						VisitLogsUtil aUtil=new VisitLogsUtil();
//						Object clientTableData[][]=aUtil.getClientTableData(clientBsedSelDomainCombo.getSelectedItem().toString());
//						
//						//jTable1.setModel(null);
//						clientTable.setModel(new javax.swing.table.DefaultTableModel(
//								clientTableData, new String[] { "IP",
//										"Location", "Operating System", "Browser" }) {
//							Class[] types = new Class[] { java.lang.String.class,
//									java.lang.String.class, java.lang.String.class,
//									java.lang.String.class };
//							boolean[] canEdit = new boolean[] { false, false, false, false };
//
//							public Class getColumnClass(int columnIndex) {
//								return types[columnIndex];
//							}
//
//							public boolean isCellEditable(int rowIndex, int columnIndex) {
//								return canEdit[columnIndex];
//							}
//						});
//					}
//				});


        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "IP", "Location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientBasedClientTable.setViewportView(clientTable);

        org.jdesktop.layout.GroupLayout clientBasedClientTablePanelLayout = new org.jdesktop.layout.GroupLayout(clientBasedClientTablePanel);
        clientBasedClientTablePanel.setLayout(clientBasedClientTablePanelLayout);
        clientBasedClientTablePanelLayout.setHorizontalGroup(
            clientBasedClientTablePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(clientBasedClientTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
        );
        clientBasedClientTablePanelLayout.setVerticalGroup(
            clientBasedClientTablePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(clientBasedClientTablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(clientBasedClientTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout clientBasedPanelLayout = new org.jdesktop.layout.GroupLayout(clientBasedPanel);
        clientBasedPanel.setLayout(clientBasedPanelLayout);
        clientBasedPanelLayout.setHorizontalGroup(
            clientBasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(clientBasedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(clientBasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(clientBasedClientTablePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(clientBasedPanelLayout.createSequentialGroup()
                        .add(clientBasedSeleDomainL)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(clientBsedSelDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(clientbasedShowVisitsButton)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        clientBasedPanelLayout.setVerticalGroup(
            clientBasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(clientBasedPanelLayout.createSequentialGroup()
                .add(clientBasedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(clientBsedSelDomainCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(clientBasedSeleDomainL)
                    .add(clientbasedShowVisitsButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(clientBasedClientTablePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        resultstabbedPane.addTab("Client-based", clientBasedPanel);


        org.jdesktop.layout.GroupLayout resultsPanelLayout = new org.jdesktop.layout.GroupLayout(resultsPanel);
        resultsPanel.setLayout(resultsPanelLayout);
        resultsPanelLayout.setHorizontalGroup(
            resultsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, resultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(resultstabbedPane)
                .addContainerGap())
        );
        resultsPanelLayout.setVerticalGroup(
            resultsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(resultsPanelLayout.createSequentialGroup()
                .add(resultstabbedPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 375, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 2, Short.MAX_VALUE))
        );
        
        mainTabbedPane.addTab("Results", resultsPanel);

        jLabel1.setText("WATER SENSOR QUALITY DETECTOR");

        Logout.setText("Logout");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 256, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(204, 204, 204)
                        .add(Logout))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(mainTabbedPane)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(Logout)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(mainTabbedPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 423, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        this.setLocation(250, 100);
        this.setVisible(true);
    }// </editor-fold>


    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {                                       
        this.dispose();
        Login login = new Login();
    }                                      



   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserPage().setVisible(true);
            }
        });
    }
    
    // UI Variables declaration - do not modify
    private javax.swing.JButton Logout;
    private javax.swing.JTextField addDomainAnnFeeTf;
    private javax.swing.JTextField addDomainCatogTF;
    private javax.swing.JTextField addDomainEDateTF;
    private javax.swing.JTextField addDomainIPTF;
    private javax.swing.JTextField addDomainNameTF;
    private javax.swing.JTextField addDomainSdateTf;
    private javax.swing.JTextField addDomainTLDTF;
    private javax.swing.JPanel salinitySensorPanel;
    private javax.swing.JComboBox clientBsedSelDomainCombo;
    private javax.swing.JComboBox deleteDomainSelCombo;
    private javax.swing.JPanel domainCardPanel;
    private javax.swing.JTextField editDomainNameTF;
    private javax.swing.JPanel uploadDataPanel;
    private javax.swing.JComboBox editDomainSelCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable domainTable;
    private javax.swing.JTextField editDomainIPTF;
    private javax.swing.JTextField editDomainTLDTF;
    private javax.swing.JTextField editDomainCategoryTF;
    private javax.swing.JTextField editDomainAnnualFeeTF;
    private javax.swing.JTextField editDomainRDateTF;
    private javax.swing.JTextField editDomainExDateTF;
    private javax.swing.JLabel locBasedSelecDomainL;
    private javax.swing.JComboBox locBasedSelectDomainCombo;
    private javax.swing.JButton locBasedShowVisitsButton;
    private javax.swing.JPanel salinityBasedPieChartPanel;
    private javax.swing.JPanel pHBasedPieChartPanel;
    private javax.swing.JPanel conductivityBasedPieChartPanel;
    private javax.swing.JPanel temperatureBasedPieChartPanel;
    private javax.swing.JPanel dissolvedOxyBasedPieChartPanel;
    private javax.swing.JComboBox locaBasedSelLocationCombo;
    private javax.swing.JLabel locaBsedSelLocationL;
    private javax.swing.JPanel pHSensorPanel;
    private javax.swing.JPanel conductivitySensorPanel;
    private javax.swing.JPanel temperatureSensorPanel;
    private javax.swing.JPanel dissolvedOxySensorPanel;
    private javax.swing.JPanel resultsPanel;
    private javax.swing.JTabbedPane resultstabbedPane;
    private javax.swing.JTabbedPane mainTabbedPane;
	private javax.swing.JTextField uploadDataTF;
	private javax.swing.JButton uploadFileButton;
	private javax.swing.JButton browseFileButton;

    // End of variables declaration


}

